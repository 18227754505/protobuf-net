' This file was generated by a tool; you should avoid making direct changes.
' Consider using 'partial classes' to extend these types
' Input: my.proto

#Disable Warning BC40008, IDE1006

<Global.ProtoBuf.ProtoContract()>
Partial Public Class Foo
    Implements Global.ProtoBuf.IExtensible
    Private __pbn__extensionData As Global.ProtoBuf.IExtension
    Private Function GetExtensionObject(ByVal createIfMissing As Boolean) As IExtension Implements IExtensible.GetExtensionObject
        Return Extensible.GetExtensionObject(__pbn__extensionData, createIfMissing)
    End Function
End Class

<Global.ProtoBuf.ProtoContract()>
Partial Public Class Bar
    Implements Global.ProtoBuf.IExtensible
    Private __pbn__extensionData As Global.ProtoBuf.IExtension
    Private Function GetExtensionObject(ByVal createIfMissing As Boolean) As IExtension Implements IExtensible.GetExtensionObject
        Return Extensible.GetExtensionObject(__pbn__extensionData, createIfMissing)
    End Function
    Public Shared Function GetA(ByVal obj As Foo) As Integer
        Return If(obj Is Nothing, CType(Nothing, Integer), Global.ProtoBuf.Extensible.GetValue(Of Integer)(obj, 105))
    End Function
End Class

<Global.System.Runtime.CompilerServices.Extension>
Public Module Extensions
    <Global.System.Runtime.CompilerServices.Extension>
    Public Function GetB(ByVal obj As Foo) As Integer
        Return If(obj Is Nothing, CType(Nothing, Integer), Global.ProtoBuf.Extensible.GetValue(Of Integer)(obj, 106))
    End Function
End Module
#Enable Warning BC40008, IDE1006

